Using target microbit with build engine yotta
  target: v7.0.18 C:\github\pxt\pxt-arcadeshield\node_modules\pxt-microbit
  pxt-core: v10.2.8 C:\github\pxt\pxt-arcadeshield\node_modules\pxt-core
debug mode
building C:\github\pxt\pxt-arcadeshield
deps: this->core, radio, microphone, settings, fonts
deps: resolved this->core, radio, microphone, settings, fonts
dep: load this.core: *
deps: core->
deps: resolved core->
  installed core
dep: load this.radio: *
deps: radio->core
deps: resolved radio->core
dep: load radio.core: *
  installed radio
dep: load this.microphone: *
deps: microphone->core
deps: resolved microphone->core
dep: load microphone.core: *
  installed microphone
dep: load this.settings: *
deps: settings->core
deps: resolved settings->core
dep: load settings.core: *
  installed settings
dep: load this.fonts: *
deps: fonts->core
deps: resolved fonts->core
dep: load fonts.core: *
  installed fonts
deps: this->core, radio, microphone, settings, fonts
deps: resolved this->core, radio, microphone, settings, fonts
dep: load this.core++: *
dep: load this.radio++: *
dep: load this.microphone++: *
dep: load this.settings++: *
dep: load this.fonts++: *
deps: core->
deps: resolved core->
deps: radio->core
deps: resolved radio->core
dep: load radio.core++: *
deps: microphone->core
deps: resolved microphone->core
dep: load microphone.core++: *
deps: settings->core
deps: resolved settings->core
dep: load settings.core++: *
deps: fonts->core
deps: resolved fonts->core
dep: load fonts.core++: *
  installed this
set build engine: dockeryotta
building: core, fonts, microphone, radio, settings, pxt-arcadeshield
app variant: mbdal
disable variant mbdal due to fonts
disable variant mbdal due to settings
disable variant mbdal due to this
Generating new extinfo
module.json: {
    "name": "pxt-microbit-app",
    "version": "0.0.0",
    "description": "Auto-generated. Do not edit.",
    "license": "n/a",
    "dependencies": {
        "microbit": "lancaster-university/microbit#v2.2.0-rc6"
    },
    "targetDependencies": {},
    "bin": "./source"
}

pxtconfig.h: // Configuration defines

yotta config.json: {
    "microbit_dal": {
        "bluetooth": {
            "private_addressing": 0,
            "advertising_timeout": 0,
            "tx_power": 6,
            "dfu_service": 1,
            "event_service": 1,
            "device_info_service": 1,
            "eddystone_url": 1,
            "eddystone_uid": 1,
            "open": 0,
            "pairing_mode": 1,
            "whitelist": 1,
            "security_level": "SECURITY_MODE_ENCRYPTION_NO_MITM",
            "partial_flashing": 1,
            "enabled": 0
        },
        "fiber_user_data": 1,
        "pxt": 1
    },
    "PXT_TARGET": "\"microbit\""
}

app variant: undefined
building for mbcodal
app variant: mbcodal
Generating new extinfo
codal.json: {
    "target": {
        "name": "codal-microbit-v2",
        "url": "https://github.com/lancaster-university/codal-microbit-v2",
        "branch": "v0.2.67",
        "type": "git"
    },
    "definitions": {
        "DEVICE_BLE": 0,
        "DMESG_SERIAL_DEBUG": 1,
        "MICROBIT_DAL_BLUETOOTH_PRIVATE_ADDRESSING": 0,
        "MICROBIT_DAL_BLUETOOTH_ADVERTISING_TIMEOUT": 0,
        "MICROBIT_DAL_BLUETOOTH_TX_POWER": 6,
        "MICROBIT_DAL_BLUETOOTH_DFU_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_EVENT_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_DEVICE_INFO_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_EDDYSTONE_URL": 1,
        "MICROBIT_DAL_BLUETOOTH_EDDYSTONE_UID": 1,
        "MICROBIT_DAL_BLUETOOTH_OPEN": 0,
        "MICROBIT_DAL_BLUETOOTH_PAIRING_MODE": 1,
        "MICROBIT_DAL_BLUETOOTH_WHITELIST": 1,
        "MICROBIT_DAL_BLUETOOTH_SECURITY_LEVEL": "SECURITY_MODE_ENCRYPTION_NO_MITM",
        "MICROBIT_DAL_BLUETOOTH_PARTIAL_FLASHING": 1,
        "MICROBIT_DAL_BLUETOOTH_ENABLED": 0,
        "MICROBIT_DAL_FIBER_USER_DATA": 1,
        "MICROBIT_DAL_PXT": 1,
        "YOTTA_CFG_DEVICE_BLE": 0,
        "YOTTA_CFG_DMESG_SERIAL_DEBUG": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PRIVATE_ADDRESSING": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_ADVERTISING_TIMEOUT": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_TX_POWER": 6,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_DFU_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EVENT_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_DEVICE_INFO_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EDDYSTONE_URL": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EDDYSTONE_UID": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_OPEN": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PAIRING_MODE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_WHITELIST": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_SECURITY_LEVEL": "SECURITY_MODE_ENCRYPTION_NO_MITM",
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PARTIAL_FLASHING": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_ENABLED": 0,
        "YOTTA_CFG_MICROBIT_DAL_FIBER_USER_DATA": 1,
        "YOTTA_CFG_MICROBIT_DAL_PXT": 1,
        "PXT_TARGET": "\"microbit\""
    },
    "config": {
        "DEVICE_BLE": 0,
        "DMESG_SERIAL_DEBUG": 1,
        "MICROBIT_DAL_BLUETOOTH_PRIVATE_ADDRESSING": 0,
        "MICROBIT_DAL_BLUETOOTH_ADVERTISING_TIMEOUT": 0,
        "MICROBIT_DAL_BLUETOOTH_TX_POWER": 6,
        "MICROBIT_DAL_BLUETOOTH_DFU_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_EVENT_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_DEVICE_INFO_SERVICE": 1,
        "MICROBIT_DAL_BLUETOOTH_EDDYSTONE_URL": 1,
        "MICROBIT_DAL_BLUETOOTH_EDDYSTONE_UID": 1,
        "MICROBIT_DAL_BLUETOOTH_OPEN": 0,
        "MICROBIT_DAL_BLUETOOTH_PAIRING_MODE": 1,
        "MICROBIT_DAL_BLUETOOTH_WHITELIST": 1,
        "MICROBIT_DAL_BLUETOOTH_SECURITY_LEVEL": "SECURITY_MODE_ENCRYPTION_NO_MITM",
        "MICROBIT_DAL_BLUETOOTH_PARTIAL_FLASHING": 1,
        "MICROBIT_DAL_BLUETOOTH_ENABLED": 0,
        "MICROBIT_DAL_FIBER_USER_DATA": 1,
        "MICROBIT_DAL_PXT": 1,
        "YOTTA_CFG_DEVICE_BLE": 0,
        "YOTTA_CFG_DMESG_SERIAL_DEBUG": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PRIVATE_ADDRESSING": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_ADVERTISING_TIMEOUT": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_TX_POWER": 6,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_DFU_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EVENT_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_DEVICE_INFO_SERVICE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EDDYSTONE_URL": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_EDDYSTONE_UID": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_OPEN": 0,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PAIRING_MODE": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_WHITELIST": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_SECURITY_LEVEL": "SECURITY_MODE_ENCRYPTION_NO_MITM",
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_PARTIAL_FLASHING": 1,
        "YOTTA_CFG_MICROBIT_DAL_BLUETOOTH_ENABLED": 0,
        "YOTTA_CFG_MICROBIT_DAL_FIBER_USER_DATA": 1,
        "YOTTA_CFG_MICROBIT_DAL_PXT": 1,
        "PXT_TARGET": "\"microbit\""
    },
    "application": "pxtapp",
    "output_folder": "build",
    "pxt_gitrepo": "lancaster-university/microbit-v2-samples",
    "pxt_gittag": "v0.2.13"
}

pxtconfig.h: // Configuration defines

app variant: undefined

PROC <main>
    // brk 111
    { [_intervals] := undefined }
    ;
    // brk 267
    { [_pollEventQueue] := undefined }
    ;
    // brk 268
    { [RUN_KEY] := _str26 }
    ;
    // brk 269
    { [SCOPE_KEY] := _str27 }
    ;
    // brk 282
    settings.initScopes()
    ;
    // brk 303
    screen::setPalette(_hex1144)
    ;
    // brk 304
    { [theScreen] := _screen_internal.createScreen() }
    ;
    // brk 309
    { [defaultBitmap] := bitmap::ofBuffer(_hex1152) }
    ;
    // brk 310
    pxtrt::mapSetByString(SHARED_DEF(#1 u(4): pxtrt::mkMap()), null, 6)
    pxtrt::mapSetByString(SHARED_REF(#1), null, 8)
    pxtrt::mapSetByString(SHARED_REF(#1), null, _hex1941)
    { [font8] := SHARED_REF(#1) }
    ;
    // brk 311
    pxtrt::mapSetByString(SHARED_DEF(#2 u(4): pxtrt::mkMap()), null, 12)
    pxtrt::mapSetByString(SHARED_REF(#2), null, 12)
    pxtrt::mapSetByString(SHARED_REF(#2), null, _hex1943)
    { [font12] := SHARED_REF(#2) }
    ;
    // brk 319
    pxtrt::mapSetByString(SHARED_DEF(#3 u(4): pxtrt::mkMap()), null, 6)
    pxtrt::mapSetByString(SHARED_REF(#3), null, 5)
    pxtrt::mapSetByString(SHARED_REF(#3), null, _hex2329)
    { [font5] := SHARED_REF(#3) }
    ;
    // brk 399
    { [__updated] := false }
    ;
    // brk 406
    control.runInParallel(control___screen_inline__P1175_Lit)
    ;
    // brk 438
    Array_::push(SHARED_DEF(#4 u(8): Array_::mk()), pxsim_screen_updateScreen__P1258_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_updateStats__P1259_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_setPalette__P1260_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_setScreenBrightness__P1261_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_displayHeight__P1262_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_displayWidth__P1263_Lit)
    Array_::push(SHARED_REF(#4), pxsim_screen_displayPresent__P1264_Lit)
    { [myfuns] := SHARED_REF(#4) }
    ;
    // brk 439
    Array_::length([myfuns])
    ;
    // brk 450
    SHARED_DEF(#5 u(3): pxt::mkClassInstance(screensim_ScreenState__C1284_VT))
    screensim.ScreenState.constructor(SHARED_REF(#5))
    { [_screenState] := SHARED_REF(#5) }
    ;
    // brk 453
    SHARED_DEF(#6 u(3): pxt::mkClassInstance(Scene__C1345_VT))
    Scene.constructor(SHARED_REF(#6))
    { [_scene] := SHARED_REF(#6) }
    ;
    // brk 454
    { [consoleFont] := [font5] }
    ;
    // brk 455
    { [consoleLines] := numops::subs(Math_::floor(numops::div(BitmapMethods::height([theScreen]), numops::adds(IFACE@3([consoleFont]), 2))), 1) }
    ;
    // brk 456
    { [consoleColumns] := Math_::floor(numops::div(numops::subs(BitmapMethods::width([theScreen]), 8), IFACE@4([consoleFont]))) }
    ;
    // brk 457
    console.addListener(scene_consoleOverlay_listener__P1407_Lit)
    ;
    // brk 468
    { [present] := screen::displayPresent() }
    ;
    // brk 469
    if (! numops::toBoolDecr([present])) goto .condexprz_0_1
    { JMPVALUE := 1 } goto .condexprfin_1_1
.condexprz_0_1:
    { JMPVALUE := 0 } goto .condexprfin_1_1
.condexprfin_1_1:
    SHARED_DEF(#7 u(2): JMPVALUE)
    basic.showNumber(SHARED_REF(#7), 150)
    ;
    // brk 470
.cont.1501:
    // brk 471
    if (! numops::toBoolDecr(true)) goto .brk.1501
    // brk 472
    { [x] := 0 }
    ;
    // brk 473
    { [my] := numops::subs(BitmapMethods::height(bitmap.screenImage()), 1) }
    ;
    // brk 474
    BitmapMethods::fill(bitmap.screenImage(), 0)
    ;
    // brk 475
    helpers.imagePrint(bitmap.screenImage(), numops::toString([my]), 60, 60, undefined, undefined, undefined)
    ;
    // brk 476
.cont.1521:
    // brk 477
    if (! numops::toBoolDecr(numops::lt([x], 160))) goto .brk.1521
    // brk 478
    BitmapMethods::setPixel(bitmap.screenImage(), [x], 0, 9)
    ;
    // brk 479
    BitmapMethods::setPixel(bitmap.screenImage(), [x], 2, 10)
    ;
    // brk 480
    BitmapMethods::setPixel(bitmap.screenImage(), [x], 4, 11)
    ;
    // brk 481
    BitmapMethods::setPixel(bitmap.screenImage(), [x], [my], 9)
    ;
    // brk 482
    BitmapMethods::setPixel(bitmap.screenImage(), [x], numops::subs([my], 2), 10)
    ;
    // brk 483
    BitmapMethods::setPixel(bitmap.screenImage(), [x], numops::subs([my], 4), 11)
    ;
    // brk 484
    { [x] := numops::adds([x], 1) }
    ;
    // brk 485
    basic::pause(100)
    ;
    goto .cont.1521
.brk.1521:
    goto .cont.1501
.brk.1501:
.ret.1:
    ;
    { JMPVALUE := undefined } goto .final_2_1
.final_2_1:



PROC control.__screen.inline
    // brk 407
.cont.1176:
    // brk 408
    if (! numops::toBoolDecr(true)) goto .brk.1176
    // brk 409
    { [__updated] := false }
    ;
    // brk 410
    pause(200)
    ;
    // brk 411
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([__updated])))) goto .else_0_2
    // brk 412
    control.__screen.update()
    ;
    // brk 413
    { [__updated] := true }
    ;
    goto .afterif_1_2
.else_0_2:
.afterif_1_2:
    goto .cont.1176
.brk.1176:
    { JMPVALUE := undefined } goto .ret.1175
.ret.1175:
    ;
    goto .final_2_2
.final_2_2:



PROC helpers.imagePrint
    // brk 320
    { [ARG x] := numops::orrs([ARG x], 0) }
    ;
    // brk 321
    { [ARG y] := numops::orrs([ARG y], 0) }
    ;
    // brk 322
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([ARG font])))) goto .else_0_3
    // brk 323
    { [ARG font] := bitmap.getFontForText([ARG text]) }
    ;
    goto .afterif_1_3
.else_0_3:
.afterif_1_3:
    // brk 324
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([ARG color])))) goto .else_2_3
    // brk 325
    { [ARG color] := 1 }
    ;
    goto .afterif_3_3
.else_2_3:
.afterif_3_3:
    // brk 326
    { [x0] := [ARG x] }
    ;
    // brk 327
    { [cp] := 0 }
    ;
    // brk 328
    if (! numops::toBoolDecr(IFACE@14([ARG font]))) goto .condexprz_4_3
    { JMPVALUE := IFACE@14([ARG font]) } goto .condexprfin_5_3
.condexprz_4_3:
    { JMPVALUE := 1 } goto .condexprfin_5_3
.condexprfin_5_3:
    SHARED_DEF(#8 u(2): JMPVALUE)
    { [mult] := SHARED_REF(#8) }
    ;
    // brk 329
    { [dataW] := Math_::idiv(IFACE@4([ARG font]), [mult]) }
    ;
    // brk 330
    { [dataH] := Math_::idiv(IFACE@3([ARG font]), [mult]) }
    ;
    // brk 331
    { [byteHeight] := numops::asrs(numops::adds([dataH], 7), 3) }
    ;
    // brk 332
    { [charSize] := numops::muls([byteHeight], [dataW]) }
    ;
    // brk 333
    { [dataSize] := numops::adds(2, [charSize]) }
    ;
    // brk 334
    { [fontdata] := IFACE@6([ARG font]) }
    ;
    // brk 335
    { [lastchar] := numops::subs(Math_::idiv(BufferMethods::length([fontdata]), [dataSize]), 1) }
    ;
    // brk 336
    if (! numops::toBoolDecr(numops::eq([mult], 1))) goto .else_6_3
    // brk 337
    { [imgBuf] := control::createBuffer(numops::adds(8, [charSize])) }
    ;
    // brk 338
    BufferMethods::setByte([imgBuf], 0, 135)
    ;
    // brk 339
    BufferMethods::setByte([imgBuf], 1, 1)
    ;
    // brk 340
    BufferMethods::setByte([imgBuf], 2, [dataW])
    ;
    // brk 341
    BufferMethods::setByte([imgBuf], 4, [dataH])
    ;
    goto .afterif_7_3
.else_6_3:
.afterif_7_3:
    // brk 342
.cont.1645:
    // brk 343
    if (! numops::toBoolDecr(numops::lt([cp], String_::length([ARG text])))) goto .brk.1645
    // brk 344
    { [xOffset] := 0 }
    ;
    // brk 345
    { [yOffset] := 0 }
    ;
    // brk 346
    if (numops::toBool(SHARED_DEF(#9 u(3): [ARG offsets]))) goto .lazySkip_10_3
    { JMPVALUE := SHARED_REF(#9) } goto .lazy_9_3
.lazySkip_10_3:
    langsupp::ignore(SHARED_REF(#9))
    { JMPVALUE := numops::lt([cp], Array_::length([ARG offsets])) } goto .lazy_9_3
.lazy_9_3:
    SHARED_DEF(#10 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#10))) goto .else_8_3
    // brk 347
    { [xOffset] := IFACE@21(Array_::getAt([ARG offsets], [cp])) }
    ;
    // brk 348
    { [yOffset] := IFACE@22(Array_::getAt([ARG offsets], [cp])) }
    ;
    goto .afterif_11_3
.else_8_3:
.afterif_11_3:
    // brk 349
    { [cp] := numops::adds(SHARED_DEF(#11 u(2): [cp]), 1) }
    { [ch] := String_::charCodeAt([ARG text], SHARED_REF(#11)) }
    ;
    // brk 350
    if (! numops::toBoolDecr(numops::eq([ch], 10))) goto .else_12_3
    // brk 351
    { [ARG y] := numops::adds([ARG y], numops::adds(IFACE@3([ARG font]), 2)) }
    ;
    // brk 352
    { [ARG x] := [x0] }
    ;
    goto .afterif_13_3
.else_12_3:
.afterif_13_3:
    // brk 353
    if (! numops::toBoolDecr(numops::lt([ch], 32))) goto .else_14_3
    // brk 354
    goto .cont.1645
    goto .afterif_15_3
.else_14_3:
.afterif_15_3:
    // brk 355
    { [l] := 0 }
    ;
    // brk 356
    { [r] := [lastchar] }
    ;
    // brk 357
    { [off] := 0 }
    ;
    // brk 358
    { [guess] := numops::muls(numops::subs([ch], 32), [dataSize]) }
    ;
    // brk 359
    if (! numops::toBoolDecr(numops::eq(BufferMethods::getNumber([fontdata], 4, [guess]), [ch]))) goto .else_16_3
    // brk 360
    { [off] := [guess] }
    ;
    goto .afterif_17_3
.else_16_3:
    // brk 361
.cont.1710:
    // brk 362
    if (! numops::toBoolDecr(numops::le([l], [r]))) goto .brk.1710
    // brk 363
    { [m] := numops::adds([l], numops::asrs(numops::subs([r], [l]), 1)) }
    ;
    // brk 364
    { [v] := BufferMethods::getNumber([fontdata], 4, numops::muls([m], [dataSize])) }
    ;
    // brk 365
    if (! numops::toBoolDecr(numops::eq([v], [ch]))) goto .else_18_3
    // brk 366
    { [off] := numops::muls([m], [dataSize]) }
    ;
    // brk 367
    goto .brk.1710
    goto .afterif_19_3
.else_18_3:
.afterif_19_3:
    // brk 368
    if (! numops::toBoolDecr(numops::lt([v], [ch]))) goto .else_20_3
    // brk 369
    { [l] := numops::adds([m], 1) }
    ;
    goto .afterif_21_3
.else_20_3:
    // brk 370
    { [r] := numops::subs([m], 1) }
    ;
.afterif_21_3:
    goto .cont.1710
.brk.1710:
.afterif_17_3:
    // brk 371
    if (! numops::toBoolDecr(numops::eq([mult], 1))) goto .else_22_3
    // brk 372
    BufferMethods::write([imgBuf], 8, BufferMethods::slice([fontdata], numops::adds([off], 2), [charSize]))
    ;
    // brk 373
    helpers.imageDrawIcon([ARG img], [imgBuf], numops::adds([ARG x], [xOffset]), numops::adds([ARG y], [yOffset]), [ARG color])
    ;
    // brk 374
    { [ARG x] := numops::adds([ARG x], IFACE@4([ARG font])) }
    ;
    goto .afterif_23_3
.else_22_3:
    // brk 375
    { [off] := numops::adds([off], 2) }
    ;
    // brk 376
    { [i] := 0 }
    ;
    // brk 377
.fortop.1783:
    // brk 378
    if (! numops::toBoolDecr(numops::lt([i], [dataW]))) goto .brk.1783
    // brk 379
    { [j] := 0 }
    ;
    // brk 380
    { [mask] := 1 }
    ;
    // brk 381
    { [off] := numops::adds(SHARED_DEF(#12 u(2): [off]), 1) }
    { [c] := BufferMethods::getByte([fontdata], SHARED_REF(#12)) }
    ;
    // brk 382
.cont.1794:
    // brk 383
    if (! numops::toBoolDecr(numops::lt([j], [dataH]))) goto .brk.1794
    // brk 384
    if (! numops::toBoolDecr(numops::eq([mask], 256))) goto .else_24_3
    // brk 385
    { [off] := numops::adds(SHARED_DEF(#13 u(2): [off]), 1) }
    { [c] := BufferMethods::getByte([fontdata], SHARED_REF(#13)) }
    ;
    // brk 386
    { [mask] := 1 }
    ;
    goto .afterif_25_3
.else_24_3:
.afterif_25_3:
    // brk 387
    { [n] := 0 }
    ;
    // brk 388
.cont.1807:
    // brk 389
    if (! numops::toBoolDecr(numops::ands([c], [mask]))) goto .brk.1807
    // brk 390
    { [n] := numops::adds([n], 1) }
    ;
    // brk 391
    { [mask] := numops::lsls([mask], 1) }
    ;
    goto .cont.1807
.brk.1807:
    // brk 392
    if (! numops::toBoolDecr([n])) goto .else_26_3
    // brk 393
    helpers.imageFillRect([ARG img], numops::adds([ARG x], numops::muls([xOffset], [mult])), numops::adds([ARG y], numops::muls(numops::adds([j], [yOffset]), [mult])), [mult], numops::muls([mult], [n]), [ARG color])
    ;
    // brk 394
    { [j] := numops::adds([j], [n]) }
    ;
    goto .afterif_27_3
.else_26_3:
    // brk 395
    { [mask] := numops::lsls([mask], 1) }
    ;
    // brk 396
    { [j] := numops::adds([j], 1) }
    ;
.afterif_27_3:
    goto .cont.1794
.brk.1794:
    // brk 397
    { [ARG x] := numops::adds([ARG x], [mult]) }
    ;
.cont.1783:
    // brk 398
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.1783
.brk.1783:
.afterif_23_3:
    goto .cont.1645
.brk.1645:
.ret.1168:
    ;
    { JMPVALUE := undefined } goto .final_28_3
.final_28_3:



PROC helpers.imageFillRect
    // brk 302
    BitmapMethods::_fillRect([ARG img], helpers.pack([ARG x], [ARG y]), helpers.pack([ARG w], [ARG h]), [ARG c])
    ;
.ret.1119:
    ;
    { JMPVALUE := undefined } goto .final_0_4
.final_0_4:



PROC helpers.pack
    // brk 300
    { JMPVALUE := numops::orrs(numops::ands(Math.clamp(-30000, 30000, numops::orrs([ARG x], 0)), 65535), numops::lsls(Math.clamp(-30000, 30000, numops::orrs([ARG y], 0)), 16)) } goto .ret.1114
.ret.1114:
    ;
    goto .final_0_5
.final_0_5:



PROC Math.clamp
    // brk 85
    { JMPVALUE := Math.min([ARG max], Math.max([ARG min], [ARG value])) } goto .ret.227
.ret.227:
    ;
    goto .final_0_6
.final_0_6:



PROC Math.max
    // brk 86
    if (! numops::toBoolDecr(numops::ge([ARG a], [ARG b]))) goto .else_0_7
    // brk 87
    { JMPVALUE := [ARG a] } goto .ret.230
    goto .afterif_1_7
.else_0_7:
.afterif_1_7:
    // brk 88
    { JMPVALUE := [ARG b] } goto .ret.230
.ret.230:
    ;
    goto .final_2_7
.final_2_7:



PROC Math.min
    // brk 89
    if (! numops::toBoolDecr(numops::le([ARG a], [ARG b]))) goto .else_0_8
    // brk 90
    { JMPVALUE := [ARG a] } goto .ret.231
    goto .afterif_1_8
.else_0_8:
.afterif_1_8:
    // brk 91
    { JMPVALUE := [ARG b] } goto .ret.231
.ret.231:
    ;
    goto .final_2_8
.final_2_8:



PROC helpers.imageDrawIcon
    // brk 301
    BitmapMethods::_drawIcon([ARG img], [ARG icon], helpers.pack([ARG x], [ARG y]), [ARG c])
    ;
.ret.1118:
    ;
    { JMPVALUE := undefined } goto .final_0_9
.final_0_9:



PROC bitmap.getFontForText
    // brk 312
    { [i] := 0 }
    ;
    // brk 313
.fortop.1925:
    // brk 314
    if (! numops::toBoolDecr(numops::lt([i], String_::length([ARG text])))) goto .brk.1925
    // brk 315
    if (! numops::toBoolDecr(numops::gt(String_::charCodeAt([ARG text], [i]), 8192))) goto .else_0_10
    // brk 316
    { JMPVALUE := [font12] } goto .ret.1160
    goto .afterif_1_10
.else_0_10:
.afterif_1_10:
.cont.1925:
    // brk 317
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.1925
.brk.1925:
    // brk 318
    { JMPVALUE := [font8] } goto .ret.1160
.ret.1160:
    ;
    goto .final_2_10
.final_2_10:



PROC bitmap.screenImage
    // brk 308
    { JMPVALUE := [theScreen] } goto .ret.1148
.ret.1148:
    ;
    goto .final_0_11
.final_0_11:



PROC basic.showNumber
    // brk 104
    if (! numops::toBoolDecr(isNaN([ARG value]))) goto .else_0_12
    // brk 105
    basic::showString(_str0, 150)
    ;
    goto .afterif_1_12
.else_0_12:
    // brk 106
    basic::showString(numops::toString(Math.roundWithPrecision([ARG value], 2)), [ARG interval])
    ;
.afterif_1_12:
.ret.367:
    ;
    { JMPVALUE := undefined } goto .final_2_12
.final_2_12:



PROC Math.roundWithPrecision
    // brk 92
    { [ARG digits] := numops::orrs([ARG digits], 0) }
    ;
    // brk 93
    if (! numops::toBoolDecr(numops::le([ARG digits], 0))) goto .else_0_13
    // brk 94
    { JMPVALUE := Math_::round([ARG x]) } goto .ret.232
    goto .afterif_1_13
.else_0_13:
.afterif_1_13:
    // brk 95
    if (! numops::toBoolDecr(numops::eq([ARG x], 0))) goto .else_2_13
    // brk 96
    { JMPVALUE := 0 } goto .ret.232
    goto .afterif_3_13
.else_2_13:
.afterif_3_13:
    // brk 97
    { [r] := 0 }
    ;
    // brk 98
.cont.1972:
    // brk 99
    { [d] := Math_::pow(10, [ARG digits]) }
    ;
    // brk 100
    { [r] := numops::div(Math_::round(numops::muls([ARG x], [d])), [d]) }
    ;
    // brk 101
    { [ARG digits] := numops::adds([ARG digits], 1) }
    ;
    // brk 102
    if (numops::toBool(SHARED_DEF(#14 u(3): numops::eq([r], 0)))) goto .lazySkip_5_13
    { JMPVALUE := SHARED_REF(#14) } goto .lazy_4_13
.lazySkip_5_13:
    langsupp::ignore(SHARED_REF(#14))
    { JMPVALUE := numops::lt([ARG digits], 21) } goto .lazy_4_13
.lazy_4_13:
    SHARED_DEF(#15 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#15))) goto .brk.1972
    goto .cont.1972
.brk.1972:
    // brk 103
    { JMPVALUE := [r] } goto .ret.232
.ret.232:
    ;
    goto .final_6_13
.final_6_13:



PROC isNaN
    // brk 1
    { [ARG x] := numops::subs([ARG x], 0) }
    ;
    // brk 2
    { JMPVALUE := numops::neqq([ARG x], [ARG x]) } goto .ret.192
.ret.192:
    ;
    goto .final_0_14
.final_0_14:



PROC scene.consoleOverlay.listener
    // brk 458
    if (! numops::toBool(SHARED_DEF(#16 u(3): Boolean_::bang(numops::toBoolDecr([consoleStrings]))))) goto .lazySkip_2_15
    { JMPVALUE := SHARED_REF(#16) } goto .lazy_1_15
.lazySkip_2_15:
    langsupp::ignore(SHARED_REF(#16))
    { JMPVALUE := Boolean_::bang(numops::toBoolDecr([ARG text])) } goto .lazy_1_15
.lazy_1_15:
    SHARED_DEF(#17 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#17))) goto .else_0_15
    // brk 459
    goto .ret.1407
    goto .afterif_3_15
.else_0_15:
.afterif_3_15:
    // brk 460
    helpers.arrayForEach(helpers.arrayFilter(helpers.stringSplit([ARG text], _str2, undefined), forEach_inline__P2015_Lit), scene_consoleOverlay_listener_inline__P2020_Lit)
    ;
    // brk 466
    if (! numops::toBoolDecr(numops::gt(Array_::length([consoleStrings]), [consoleLines]))) goto .else_4_15
    // brk 467
    helpers.arraySplice([consoleStrings], 0, numops::subs(Array_::length([consoleStrings]), [consoleLines]))
    ;
    goto .afterif_5_15
.else_4_15:
.afterif_5_15:
.ret.1407:
    ;
    { JMPVALUE := undefined } goto .final_6_15
.final_6_15:



PROC forEach.inline
    { JMPVALUE := Boolean_::bang(numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([ARG line])))) } goto .ret.2015
.ret.2015:
    ;
    goto .final_0_16
.final_0_16:



PROC scene.consoleOverlay.listener.inline
    // brk 461
    { [j] := 0 }
    ;
    // brk 462
.fortop.2023:
    // brk 463
    if (! numops::toBoolDecr(numops::lt([j], String_::length([ARG line])))) goto .brk.2023
    // brk 464
    Array_::push([consoleStrings], helpers.stringSlice([ARG line], [j], numops::adds([j], [consoleColumns])))
    ;
.cont.2023:
    // brk 465
    { [j] := numops::adds([j], [consoleColumns]) }
    ;
    goto .fortop.2023
.brk.2023:
.ret.2020:
    ;
    { JMPVALUE := undefined } goto .final_0_17
.final_0_17:



PROC helpers.arraySplice
    // brk 3
    if (! numops::toBoolDecr(numops::lt([ARG start], 0))) goto .else_0_18
    // brk 4
    goto .ret.197
    goto .afterif_1_18
.else_0_18:
.afterif_1_18:
    // brk 5
    { [i] := 0 }
    ;
    // brk 6
.fortop.2060:
    // brk 7
    if (! numops::toBoolDecr(numops::lt([i], [ARG len]))) goto .brk.2060
    // brk 8
    Array_::removeAt([ARG arr], [ARG start])
    ;
.cont.2060:
    // brk 9
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2060
.brk.2060:
.ret.197:
    ;
    { JMPVALUE := undefined } goto .final_2_18
.final_2_18:



PROC helpers.stringSlice
    // brk 26
    { [len] := String_::length([ARG s]) }
    ;
    // brk 27
    if (! numops::toBoolDecr(numops::lt([ARG start], 0))) goto .else_0_19
    // brk 28
    { [ARG start] := Math.max(numops::adds([len], [ARG start]), 0) }
    ;
    goto .afterif_1_19
.else_0_19:
.afterif_1_19:
    // brk 29
    if (! numops::toBoolDecr(numops::eqq([ARG end], undefined))) goto .else_2_19
    // brk 30
    { [ARG end] := [len] }
    ;
    goto .afterif_3_19
.else_2_19:
    // brk 31
    if (! numops::toBoolDecr(numops::eqq([ARG end], null))) goto .else_4_19
    // brk 32
    { [ARG end] := 0 }
    ;
    goto .afterif_5_19
.else_4_19:
.afterif_5_19:
.afterif_3_19:
    // brk 33
    if (! numops::toBoolDecr(numops::lt([ARG end], 0))) goto .else_6_19
    // brk 34
    { [ARG end] := numops::adds([len], [ARG end]) }
    ;
    goto .afterif_7_19
.else_6_19:
.afterif_7_19:
    // brk 35
    { JMPVALUE := String_::substr([ARG s], [ARG start], numops::subs([ARG end], [ARG start])) } goto .ret.219
.ret.219:
    ;
    goto .final_8_19
.final_8_19:



PROC helpers.stringSplit
    // brk 36
    { [A] := Array_::mk() }
    ;
    // brk 37
    { [lim] := 0 }
    ;
    // brk 38
    if (! numops::toBoolDecr(numops::eqq([ARG limit], undefined))) goto .else_0_20
    // brk 39
    { [lim] := numops::subs(536870912, 1) }
    ;
    goto .afterif_1_20
.else_0_20:
    // brk 40
    if (! numops::toBoolDecr(numops::lt([ARG limit], 0))) goto .else_2_20
    // brk 41
    { [lim] := 0 }
    ;
    goto .afterif_3_20
.else_2_20:
    // brk 42
    { [lim] := numops::orrs([ARG limit], 0) }
    ;
.afterif_3_20:
.afterif_1_20:
    // brk 43
    { [s] := String_::length([ARG S]) }
    ;
    // brk 44
    { [p] := 0 }
    ;
    // brk 45
    { [R] := [ARG separator] }
    ;
    // brk 46
    if (! numops::toBoolDecr(numops::eq([lim], 0))) goto .else_4_20
    // brk 47
    { JMPVALUE := [A] } goto .ret.222
    goto .afterif_5_20
.else_4_20:
.afterif_5_20:
    // brk 48
    if (! numops::toBoolDecr(numops::eqq([ARG separator], undefined))) goto .else_6_20
    // brk 49
    Array_::setAt([A], 0, [ARG S])
    ;
    // brk 50
    { JMPVALUE := [A] } goto .ret.222
    goto .afterif_7_20
.else_6_20:
.afterif_7_20:
    // brk 51
    if (! numops::toBoolDecr(numops::eq([s], 0))) goto .else_8_20
    // brk 52
    { [z] := helpers.splitMatch([ARG S], 0, [R]) }
    ;
    // brk 53
    if (! numops::toBoolDecr(numops::gt([z], -1))) goto .else_9_20
    // brk 54
    { JMPVALUE := [A] } goto .ret.222
    goto .afterif_10_20
.else_9_20:
.afterif_10_20:
    // brk 55
    Array_::setAt([A], 0, [ARG S])
    ;
    // brk 56
    { JMPVALUE := [A] } goto .ret.222
    goto .afterif_11_20
.else_8_20:
.afterif_11_20:
    // brk 57
    { [q] := [p] }
    ;
    // brk 58
.cont.2162:
    // brk 59
    if (! numops::toBoolDecr(numops::neq([q], [s]))) goto .brk.2162
    // brk 60
    { [e] := helpers.splitMatch([ARG S], [q], [R]) }
    ;
    // brk 61
    if (! numops::toBoolDecr(numops::lt([e], 0))) goto .else_12_20
    // brk 62
    { [q] := numops::adds([q], 1) }
    ;
    goto .afterif_13_20
.else_12_20:
    // brk 63
    if (! numops::toBoolDecr(numops::eq([e], [p]))) goto .else_14_20
    // brk 64
    { [q] := numops::adds([q], 1) }
    ;
    goto .afterif_15_20
.else_14_20:
    // brk 65
    { [T] := helpers.stringSlice([ARG S], [p], [q]) }
    ;
    // brk 66
    Array_::push([A], [T])
    ;
    // brk 67
    if (! numops::toBoolDecr(numops::eq(Array_::length([A]), [lim]))) goto .else_16_20
    // brk 68
    { JMPVALUE := [A] } goto .ret.222
    goto .afterif_17_20
.else_16_20:
.afterif_17_20:
    // brk 69
    { [p] := [e] }
    ;
    // brk 70
    { [q] := [p] }
    ;
.afterif_15_20:
.afterif_13_20:
    goto .cont.2162
.brk.2162:
    // brk 71
    { [T] := helpers.stringSlice([ARG S], [p], [q]) }
    ;
    // brk 72
    Array_::push([A], [T])
    ;
    // brk 73
    { JMPVALUE := [A] } goto .ret.222
.ret.222:
    ;
    goto .final_18_20
.final_18_20:



PROC helpers.splitMatch
    // brk 74
    { [r] := String_::length([ARG R]) }
    ;
    // brk 75
    { [s] := String_::length([ARG S]) }
    ;
    // brk 76
    if (! numops::toBoolDecr(numops::gt(numops::adds([ARG q], [r]), [s]))) goto .else_0_21
    // brk 77
    { JMPVALUE := -1 } goto .ret.223
    goto .afterif_1_21
.else_0_21:
.afterif_1_21:
    // brk 78
    { [i] := 0 }
    ;
    // brk 79
.fortop.2225:
    // brk 80
    if (! numops::toBoolDecr(numops::lt([i], [r]))) goto .brk.2225
    // brk 81
    if (! numops::toBoolDecr(numops::neq(String_::charAt([ARG S], numops::adds([ARG q], [i])), String_::charAt([ARG R], [i])))) goto .else_2_21
    // brk 82
    { JMPVALUE := -1 } goto .ret.223
    goto .afterif_3_21
.else_2_21:
.afterif_3_21:
.cont.2225:
    // brk 83
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2225
.brk.2225:
    // brk 84
    { JMPVALUE := numops::adds([ARG q], [r]) } goto .ret.223
.ret.223:
    ;
    goto .final_4_21
.final_4_21:



PROC helpers.arrayFilter
    // brk 16
    { [res] := Array_::mk() }
    ;
    // brk 17
    { [len] := Array_::length([ARG arr]) }
    ;
    // brk 18
    { [i] := 0 }
    ;
    // brk 19
.fortop.2253:
    // brk 20
    if (! numops::toBoolDecr(numops::lt([i], [len]))) goto .brk.2253
    // brk 21
    { [v] := Array_::getAt([ARG arr], [i]) }
    ;
    // brk 22
    if (! numops::toBoolDecr(VTABLE@-1([ARG callbackfn], [v], [i]))) goto .else_0_22
    // brk 23
    Array_::push([res], [v])
    ;
    goto .afterif_1_22
.else_0_22:
.afterif_1_22:
.cont.2253:
    // brk 24
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2253
.brk.2253:
    // brk 25
    { JMPVALUE := [res] } goto .ret.209
.ret.209:
    ;
    goto .final_2_22
.final_2_22:



PROC helpers.arrayForEach
    // brk 10
    { [len] := Array_::length([ARG arr]) }
    ;
    // brk 11
    { [i] := 0 }
    ;
    // brk 12
.fortop.2277:
    // brk 13
    if (! numops::toBoolDecr(numops::lt([i], [len]))) goto .brk.2277
    // brk 14
    VTABLE@-1([ARG callbackfn], Array_::getAt([ARG arr], [i]), [i])
    ;
.cont.2277:
    // brk 15
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2277
.brk.2277:
.ret.208:
    ;
    { JMPVALUE := undefined } goto .final_0_23
.final_0_23:



PROC console.addListener
    // brk 112
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([listeners])))) goto .else_0_24
    // brk 113
    { [listeners] := Array_::mk() }
    ;
    goto .afterif_1_24
.else_0_24:
.afterif_1_24:
    // brk 114
    if (! numops::toBool(SHARED_DEF(#18 u(3): Boolean_::bang(numops::toBoolDecr([ARG listener]))))) goto .lazySkip_4_24
    { JMPVALUE := SHARED_REF(#18) } goto .lazy_3_24
.lazySkip_4_24:
    langsupp::ignore(SHARED_REF(#18))
    { JMPVALUE := numops::gt(Array_::indexOf([listeners], [ARG listener], undefined), -1) } goto .lazy_3_24
.lazy_3_24:
    SHARED_DEF(#19 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#19))) goto .else_2_24
    // brk 115
    goto .ret.425
    goto .afterif_5_24
.else_2_24:
.afterif_5_24:
    // brk 116
    Array_::push([listeners], [ARG listener])
    ;
.ret.425:
    ;
    { JMPVALUE := undefined } goto .final_6_24
.final_6_24:



PROC _screen_internal.createScreen
    // brk 305
    { [img] := bitmap::create(screen::displayWidth(), screen::displayHeight()) }
    ;
    // brk 306
    pxtrt::stclo(SHARED_DEF(#20 u(2): pxt::mkAction(1, _screen_internal_createScreen_inline__P2318_Lit)), 0, [img])
    control.__screen.setupUpdate(SHARED_REF(#20))
    ;
    // brk 307
    { JMPVALUE := [img] } goto .ret.1147
.ret.1147:
    ;
    goto .final_0_25
.final_0_25:



PROC _screen_internal.createScreen.inline
    { JMPVALUE := screen::updateScreen([img]) } goto .ret.2318
.ret.2318:
    ;
    { JMPVALUE := undefined } goto .final_0_26
.final_0_26:



PROC control.__screen.setupUpdate
    // brk 403
    { [__updated] := true }
    ;
    // brk 404
    { [__update] := [ARG update] }
    ;
    // brk 405
    VTABLE@-1([ARG update])
    ;
.ret.1173:
    ;
    { JMPVALUE := undefined } goto .final_0_27
.final_0_27:



PROC Scene.constructor
    // brk 452
    { [ARG this].buttonEventHandlers := Array_::mk() }
    ;
    { JMPVALUE := undefined } goto .ret.1347
.ret.1347:
    ;
    goto .final_0_28
.final_0_28:



PROC screensim.ScreenState.constructor
    // brk 440
    { [ARG this].runId := String_::concat(String_::stringConv(Math_::random()), String_::mkEmpty()) }
    ;
    { JMPVALUE := undefined } goto .ret.1293
.ret.1293:
    ;
    goto .final_0_29
.final_0_29:



PROC pxsim.screen.displayPresent
    // brk 434
    { [state] := screensim.getScreenState() }
    ;
    // brk 435
    if (! numops::toBoolDecr([state])) goto .else_0_30
    // brk 436
    { JMPVALUE := screensim.ScreenState.displayPresent([state]) } goto .ret.1264
    goto .afterif_1_30
.else_0_30:
.afterif_1_30:
    // brk 437
    { JMPVALUE := false } goto .ret.1264
.ret.1264:
    ;
    goto .final_2_30
.final_2_30:



PROC screensim.ScreenState.displayPresent
    // brk 443
    { JMPVALUE := true } goto .ret.1288
.ret.1288:
    ;
    goto .final_0_31
.final_0_31:



PROC screensim.getScreenState
    // brk 451
    { JMPVALUE := [_screenState] } goto .ret.1297
.ret.1297:
    ;
    goto .final_0_32
.final_0_32:



PROC pxsim.screen.displayWidth
    // brk 430
    { [state] := screensim.getScreenState() }
    ;
    // brk 431
    if (! numops::toBoolDecr([state])) goto .else_0_33
    // brk 432
    { JMPVALUE := screensim.ScreenState.displayWidth([state]) } goto .ret.1263
    goto .afterif_1_33
.else_0_33:
.afterif_1_33:
    // brk 433
    { JMPVALUE := -1 } goto .ret.1263
.ret.1263:
    ;
    goto .final_2_33
.final_2_33:



PROC screensim.ScreenState.displayWidth
    // brk 442
    { JMPVALUE := 160 } goto .ret.1287
.ret.1287:
    ;
    goto .final_0_34
.final_0_34:



PROC pxsim.screen.displayHeight
    // brk 426
    { [state] := screensim.getScreenState() }
    ;
    // brk 427
    if (! numops::toBoolDecr([state])) goto .else_0_35
    // brk 428
    { JMPVALUE := screensim.ScreenState.displayHeight([state]) } goto .ret.1262
    goto .afterif_1_35
.else_0_35:
.afterif_1_35:
    // brk 429
    { JMPVALUE := -1 } goto .ret.1262
.ret.1262:
    ;
    goto .final_2_35
.final_2_35:



PROC screensim.ScreenState.displayHeight
    // brk 441
    { JMPVALUE := 128 } goto .ret.1286
.ret.1286:
    ;
    goto .final_0_36
.final_0_36:



PROC pxsim.screen.setScreenBrightness
    // brk 423
    { [state] := screensim.getScreenState() }
    ;
    // brk 424
    if (! numops::toBoolDecr([state])) goto .else_0_37
    // brk 425
    screensim.ScreenState.setScreenBrightness([state], [ARG b])
    ;
    goto .afterif_1_37
.else_0_37:
.afterif_1_37:
.ret.1261:
    ;
    { JMPVALUE := undefined } goto .final_2_37
.final_2_37:



PROC screensim.ScreenState.setScreenBrightness
    // brk 444
    pxtrt::mapSetByString(SHARED_DEF(#21 u(4): pxtrt::mkMap()), null, _str28)
    pxtrt::mapSetByString(SHARED_REF(#21), null, [ARG this].runId)
    pxtrt::mapSetByString(SHARED_REF(#21), null, [ARG b])
    { [msg] := SHARED_REF(#21) }
    ;
    // brk 445
    pxt::sendMessage(_str29, control::createBufferFromUTF8(JSON.stringify([msg], null, 0)), false)
    ;
.ret.1289:
    ;
    { JMPVALUE := undefined } goto .final_0_38
.final_0_38:



PROC JSON.stringify
    // brk 253
    { [ss] := pxt::mkClassInstance(JSON_Stringifier__C631_VT) }
    ;
    // brk 254
    { [ss].currIndent := String_::mkEmpty() }
    ;
    // brk 255
    { [ARG indent] := numops::orrs([ARG indent], 0) }
    ;
    // brk 256
    if (! numops::toBoolDecr(numops::lt([ARG indent], 0))) goto .else_0_39
    // brk 257
    { [ARG indent] := 0 }
    ;
    goto .afterif_1_39
.else_0_39:
.afterif_1_39:
    // brk 258
    if (! numops::toBoolDecr(numops::gt([ARG indent], 10))) goto .else_2_39
    // brk 259
    { [ARG indent] := 10 }
    ;
    goto .afterif_3_39
.else_2_39:
.afterif_3_39:
    // brk 260
    { [ss].indentStep := String_::mkEmpty() }
    ;
    // brk 261
    { [ss].currIndent := String_::mkEmpty() }
    ;
    // brk 262
    { [ss].indent := [ARG indent] }
    ;
    // brk 263
.cont.2420:
    // brk 264
    { [ARG indent] := numops::subs(SHARED_DEF(#22 u(2): [ARG indent]), 1) }
    if (! numops::toBoolDecr(numops::gt(SHARED_REF(#22), 0))) goto .brk.2420
    // brk 265
    { SHARED_DEF(#23 u(2): [ss]).indentStep := String_::concat(String_::stringConv(SHARED_REF(#23).indentStep), _str25) }
    ;
    goto .cont.2420
.brk.2420:
    // brk 266
    { JMPVALUE := JSON.Stringifier.go([ss], [ARG value]) } goto .ret.634
.ret.634:
    ;
    goto .final_4_39
.final_4_39:



PROC JSON.Stringifier.go
    // brk 202
    { [t] := pxt::typeOf([ARG v]) }
    ;
    // brk 203
    if (! numops::toBoolDecr(numops::eq([t], _str13))) goto .else_0_40
    // brk 204
    { JMPVALUE := JSON.Stringifier.doString([ARG this], [ARG v]) } goto .ret.633
    goto .afterif_1_40
.else_0_40:
    // brk 205
    if (! numops::toBool(SHARED_DEF(#24 u(3): numops::eq([t], _str14)))) goto .lazySkip_4_40
    { JMPVALUE := SHARED_REF(#24) } goto .lazy_3_40
.lazySkip_4_40:
    langsupp::ignore(SHARED_REF(#24))
    { JMPVALUE := numops::eq([t], _str15) } goto .lazy_3_40
.lazy_3_40:
    SHARED_DEF(#25 u(4): JMPVALUE)
    if (! numops::toBool(SHARED_REF(#25))) goto .lazySkip_6_40
    { JMPVALUE := SHARED_REF(#25) } goto .lazy_5_40
.lazySkip_6_40:
    langsupp::ignore(SHARED_REF(#25))
    { JMPVALUE := numops::eq([ARG v], null) } goto .lazy_5_40
.lazy_5_40:
    SHARED_DEF(#26 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#26))) goto .else_2_40
    // brk 206
    { JMPVALUE := String_::concat(String_::mkEmpty(), String_::stringConv([ARG v])) } goto .ret.633
    goto .afterif_7_40
.else_2_40:
    // brk 207
    if (! numops::toBoolDecr(Array_::isArray([ARG v]))) goto .else_8_40
    // brk 208
    { [arr] := [ARG v] }
    ;
    // brk 209
    if (! numops::toBoolDecr(numops::eq(Array_::length([arr]), 0))) goto .else_9_40
    // brk 210
    { JMPVALUE := _str16 } goto .ret.633
    goto .afterif_10_40
.else_9_40:
    // brk 211
    { [r] := _str17 }
    ;
    // brk 212
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_11_40
    // brk 213
    { SHARED_DEF(#27 u(2): [ARG this]).currIndent := String_::concat(String_::stringConv(SHARED_REF(#27).currIndent), String_::stringConv([ARG this].indentStep)) }
    ;
    // brk 214
    { [r] := String_::concat(String_::stringConv([r]), _str2) }
    ;
    goto .afterif_12_40
.else_11_40:
.afterif_12_40:
    // brk 215
    { [i] := 0 }
    ;
    // brk 216
.fortop.2485:
    // brk 217
    if (! numops::toBoolDecr(numops::lt([i], Array_::length([arr])))) goto .brk.2485
    // brk 218
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv(String_::concat(String_::stringConv([ARG this].currIndent), String_::stringConv(JSON.Stringifier.go([ARG this], Array_::getAt([arr], [i])))))) }
    ;
    // brk 219
    if (! numops::toBoolDecr(numops::neq([i], numops::subs(Array_::length([arr]), 1)))) goto .else_13_40
    // brk 220
    { [r] := String_::concat(String_::stringConv([r]), _str18) }
    ;
    goto .afterif_14_40
.else_13_40:
.afterif_14_40:
    // brk 221
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_15_40
    // brk 222
    { [r] := String_::concat(String_::stringConv([r]), _str2) }
    ;
    goto .afterif_16_40
.else_15_40:
.afterif_16_40:
.cont.2485:
    // brk 223
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2485
.brk.2485:
    // brk 224
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_17_40
    // brk 225
    { [ARG this].currIndent := helpers.stringSlice([ARG this].currIndent, [ARG this].indent, undefined) }
    ;
    goto .afterif_18_40
.else_17_40:
.afterif_18_40:
    // brk 226
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv(String_::concat(String_::stringConv([ARG this].currIndent), _str19))) }
    ;
    // brk 227
    { JMPVALUE := [r] } goto .ret.633
.afterif_10_40:
    goto .afterif_19_40
.else_8_40:
    // brk 228
    { [keys] := pxtrt::keysOf([ARG v]) }
    ;
    // brk 229
    if (! numops::toBoolDecr(numops::eq(Array_::length([keys]), 0))) goto .else_20_40
    // brk 230
    { JMPVALUE := _str20 } goto .ret.633
    goto .afterif_21_40
.else_20_40:
.afterif_21_40:
    // brk 231
    { [r] := _str21 }
    ;
    // brk 232
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_22_40
    // brk 233
    { SHARED_DEF(#28 u(2): [ARG this]).currIndent := String_::concat(String_::stringConv(SHARED_REF(#28).currIndent), String_::stringConv([ARG this].indentStep)) }
    ;
    // brk 234
    { [r] := String_::concat(String_::stringConv([r]), _str2) }
    ;
    goto .afterif_23_40
.else_22_40:
.afterif_23_40:
    // brk 235
    { [i] := 0 }
    ;
    // brk 236
.fortop.2573:
    // brk 237
    if (! numops::toBoolDecr(numops::lt([i], Array_::length([keys])))) goto .brk.2573
    // brk 238
    { [k] := Array_::getAt([keys], [i]) }
    ;
    // brk 239
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv(String_::concat(String_::stringConv([ARG this].currIndent), String_::stringConv(JSON.Stringifier.doString([ARG this], [k]))))) }
    ;
    // brk 240
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_24_40
    // brk 241
    { [r] := String_::concat(String_::stringConv([r]), _str22) }
    ;
    goto .afterif_25_40
.else_24_40:
    // brk 242
    { [r] := String_::concat(String_::stringConv([r]), _str23) }
    ;
.afterif_25_40:
    // brk 243
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv(JSON.Stringifier.go([ARG this], pxtrt::mapGetGeneric([ARG v], [k])))) }
    ;
    // brk 244
    if (! numops::toBoolDecr(numops::neq([i], numops::subs(Array_::length([keys]), 1)))) goto .else_26_40
    // brk 245
    { [r] := String_::concat(String_::stringConv([r]), _str18) }
    ;
    goto .afterif_27_40
.else_26_40:
.afterif_27_40:
    // brk 246
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_28_40
    // brk 247
    { [r] := String_::concat(String_::stringConv([r]), _str2) }
    ;
    goto .afterif_29_40
.else_28_40:
.afterif_29_40:
.cont.2573:
    // brk 248
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2573
.brk.2573:
    // brk 249
    if (! numops::toBoolDecr([ARG this].indent)) goto .else_30_40
    // brk 250
    { [ARG this].currIndent := helpers.stringSlice([ARG this].currIndent, [ARG this].indent, undefined) }
    ;
    goto .afterif_31_40
.else_30_40:
.afterif_31_40:
    // brk 251
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv(String_::concat(String_::stringConv([ARG this].currIndent), _str24))) }
    ;
    // brk 252
    { JMPVALUE := [r] } goto .ret.633
.afterif_19_40:
.afterif_7_40:
.afterif_1_40:
    { JMPVALUE := undefined } goto .ret.633
.ret.633:
    ;
    goto .final_32_40
.final_32_40:



PROC JSON.Stringifier.doString
    // brk 182
    { [r] := _str1 }
    ;
    // brk 183
    { [i] := 0 }
    ;
    // brk 184
.fortop.2666:
    // brk 185
    if (! numops::toBoolDecr(numops::lt([i], String_::length([ARG s])))) goto .brk.2666
    // brk 186
    { [c] := String_::charAt([ARG s], [i]) }
    ;
    // brk 187
    if (! numops::toBoolDecr(numops::eq([c], _str2))) goto .else_0_41
    // brk 188
    { [c] := _str3 }
    ;
    goto .afterif_1_41
.else_0_41:
    // brk 189
    if (! numops::toBoolDecr(numops::eq([c], _str4))) goto .else_2_41
    // brk 190
    { [c] := _str5 }
    ;
    goto .afterif_3_41
.else_2_41:
    // brk 191
    if (! numops::toBoolDecr(numops::eq([c], _str6))) goto .else_4_41
    // brk 192
    { [c] := _str7 }
    ;
    goto .afterif_5_41
.else_4_41:
    // brk 193
    if (! numops::toBoolDecr(numops::eq([c], _str8))) goto .else_6_41
    // brk 194
    { [c] := _str9 }
    ;
    goto .afterif_7_41
.else_6_41:
    // brk 195
    if (! numops::toBoolDecr(numops::eq([c], _str10))) goto .else_8_41
    // brk 196
    { [c] := _str11 }
    ;
    goto .afterif_9_41
.else_8_41:
    // brk 197
    if (! numops::toBoolDecr(numops::eq([c], _str1))) goto .else_10_41
    // brk 198
    { [c] := _str12 }
    ;
    goto .afterif_11_41
.else_10_41:
.afterif_11_41:
.afterif_9_41:
.afterif_7_41:
.afterif_5_41:
.afterif_3_41:
.afterif_1_41:
    // brk 199
    { [r] := String_::concat(String_::stringConv([r]), String_::stringConv([c])) }
    ;
.cont.2666:
    // brk 200
    { [i] := numops::adds([i], 1) }
    ;
    goto .fortop.2666
.brk.2666:
    // brk 201
    { JMPVALUE := String_::concat(String_::stringConv([r]), _str1) } goto .ret.632
.ret.632:
    ;
    goto .final_12_41
.final_12_41:



PROC pxsim.screen.setPalette
    // brk 420
    { [state] := screensim.getScreenState() }
    ;
    // brk 421
    if (! numops::toBoolDecr([state])) goto .else_0_42
    // brk 422
    screensim.ScreenState.setPalette([state], [ARG b])
    ;
    goto .afterif_1_42
.else_0_42:
.afterif_1_42:
.ret.1260:
    ;
    { JMPVALUE := undefined } goto .final_2_42
.final_2_42:



PROC screensim.ScreenState.setPalette
    // brk 446
    pxtrt::mapSetByString(SHARED_DEF(#29 u(4): pxtrt::mkMap()), null, _str30)
    pxtrt::mapSetByString(SHARED_REF(#29), null, [ARG this].runId)
    pxtrt::mapSetByString(SHARED_REF(#29), null, IFACE@19([ARG buf].data))
    { [msg] := SHARED_REF(#29) }
    ;
    // brk 447
    pxt::sendMessage(_str29, control::createBufferFromUTF8(JSON.stringify([msg], null, 0)), false)
    ;
.ret.1290:
    ;
    { JMPVALUE := undefined } goto .final_0_43
.final_0_43:



PROC pxsim.screen.updateStats
    // brk 417
    { [state] := screensim.getScreenState() }
    ;
    // brk 418
    if (! numops::toBoolDecr([state])) goto .else_0_44
    // brk 419
    screensim.ScreenState.updateStats([state], [ARG s])
    ;
    goto .afterif_1_44
.else_0_44:
.afterif_1_44:
.ret.1259:
    ;
    { JMPVALUE := undefined } goto .final_2_44
.final_2_44:



PROC screensim.ScreenState.updateStats
.ret.1291:
    ;
    { JMPVALUE := undefined } goto .final_0_45
.final_0_45:



PROC pxsim.screen.updateScreen
    // brk 414
    { [state] := screensim.getScreenState() }
    ;
    // brk 415
    if (! numops::toBoolDecr([state])) goto .else_0_46
    // brk 416
    screensim.ScreenState.showImage([state], [ARG img])
    ;
    goto .afterif_1_46
.else_0_46:
.afterif_1_46:
.ret.1258:
    ;
    { JMPVALUE := undefined } goto .final_2_46
.final_2_46:



PROC screensim.ScreenState.showImage
    // brk 448
    pxtrt::mapSetByString(SHARED_DEF(#30 u(4): pxtrt::mkMap()), null, _str31)
    pxtrt::mapSetByString(SHARED_REF(#30), null, [ARG this].runId)
    pxtrt::mapSetByString(SHARED_REF(#30), null, IFACE@19([ARG img].data))
    { [msg] := SHARED_REF(#30) }
    ;
    // brk 449
    pxt::sendMessage(_str29, control::createBufferFromUTF8(JSON.stringify([msg], null, 0)), false)
    ;
.ret.1292:
    ;
    { JMPVALUE := undefined } goto .final_0_47
.final_0_47:



PROC control.__screen.update
    // brk 400
    if (! numops::toBoolDecr([__update])) goto .else_0_48
    // brk 401
    VTABLE@-1([__update])
    ;
    goto .afterif_1_48
.else_0_48:
.afterif_1_48:
    // brk 402
    { [__updated] := true }
    ;
.ret.1172:
    ;
    { JMPVALUE := undefined } goto .final_2_48
.final_2_48:



PROC pause
    // brk 107
    if (! numops::toBoolDecr(isNaN([ARG ms]))) goto .else_0_49
    // brk 108
    { [ARG ms] := 20 }
    ;
    goto .afterif_1_49
.else_0_49:
.afterif_1_49:
    // brk 109
    basic::pause([ARG ms])
    ;
.ret.368:
    ;
    { JMPVALUE := undefined } goto .final_2_49
.final_2_49:



PROC control.runInParallel
    // brk 110
    control::inBackground([ARG a])
    ;
.ret.383:
    ;
    { JMPVALUE := undefined } goto .final_0_50
.final_0_50:



PROC settings.initScopes
    // brk 277
    { [rn] := numops::adds(settings.runNumber(), 1) }
    ;
    // brk 278
    settings.writeNumber([RUN_KEY], [rn])
    ;
    // brk 279
    pxt::seedAddRandom(numops::ands(control::deviceSerialNumber(), 2147483647))
    ;
    // brk 280
    pxt::seedAddRandom([rn])
    ;
    // brk 281
    settings.setScope(pxt::programName())
    ;
.ret.897:
    ;
    { JMPVALUE := undefined } goto .final_0_51
.final_0_51:



PROC settings.setScope
    // brk 271
    if (! numops::toBool(SHARED_DEF(#31 u(3): Boolean_::bang(numops::toBoolDecr([ARG scope]))))) goto .lazySkip_2_52
    { JMPVALUE := SHARED_REF(#31) } goto .lazy_1_52
.lazySkip_2_52:
    langsupp::ignore(SHARED_REF(#31))
    { JMPVALUE := numops::gt(String_::length([ARG scope]), 100) } goto .lazy_1_52
.lazy_1_52:
    SHARED_DEF(#32 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#32))) goto .else_0_52
    // brk 272
    pxtrt::panic(922)
    ;
    goto .afterif_3_52
.else_0_52:
.afterif_3_52:
    // brk 273
    { [currScope] := settings.readString([SCOPE_KEY]) }
    ;
    // brk 274
    if (! numops::toBoolDecr(numops::neq([currScope], [ARG scope]))) goto .else_4_52
    // brk 275
    settings::_userClean()
    ;
    // brk 276
    settings.writeString([SCOPE_KEY], [ARG scope])
    ;
    goto .afterif_5_52
.else_4_52:
.afterif_5_52:
.ret.896:
    ;
    { JMPVALUE := undefined } goto .final_6_52
.final_6_52:



PROC settings.writeString
    // brk 286
    settings.writeBuffer([ARG key], control::createBufferFromUTF8([ARG value]))
    ;
.ret.901:
    ;
    { JMPVALUE := undefined } goto .final_0_53
.final_0_53:



PROC settings.writeBuffer
    // brk 283
    if (! numops::toBoolDecr(settings::_set([ARG key], [ARG value]))) goto .else_0_54
    // brk 284
    settings::_userClean()
    ;
    // brk 285
    pxtrt::panic(920)
    ;
    goto .afterif_1_54
.else_0_54:
.afterif_1_54:
.ret.900:
    ;
    { JMPVALUE := undefined } goto .final_2_54
.final_2_54:



PROC settings.readString
    // brk 289
    { [buf] := settings.readBuffer([ARG key]) }
    ;
    // brk 290
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([buf])))) goto .else_0_55
    // brk 291
    { JMPVALUE := undefined } goto .ret.906
    goto .afterif_1_55
.else_0_55:
    // brk 292
    { JMPVALUE := BufferMethods::toString([buf]) } goto .ret.906
.afterif_1_55:
    { JMPVALUE := undefined } goto .ret.906
.ret.906:
    ;
    goto .final_2_55
.final_2_55:



PROC settings.readBuffer
    // brk 288
    { JMPVALUE := settings::_get([ARG key]) } goto .ret.905
.ret.905:
    ;
    goto .final_0_56
.final_0_56:



PROC settings.writeNumber
    // brk 287
    Array_::push(SHARED_DEF(#33 u(2): Array_::mk()), [ARG value])
    settings.writeBuffer([ARG key], msgpack.packNumberArray(SHARED_REF(#33)))
    ;
.ret.903:
    ;
    { JMPVALUE := undefined } goto .final_0_57
.final_0_57:



PROC msgpack.packNumberArray
    // brk 164
    { [off] := 0 }
    ;
    // brk 165
    { [n] := undefined }
    ;
    ;
    { [] := [ARG nums] }
    { [] := 0 }
    ;
    // brk 166
.fortop.2865:
    if (! numops::lt_bool([], Array_::length([]))) goto .brk.2865
    { [n] := Array_::getAt([], []) }
    // brk 167
    // brk 168
    { [off] := numops::adds([off], msgpack.packNumberCore(null, [off], [n])) }
    ;
.cont.2865:
    { [] := numops::adds([], 1) }
    goto .fortop.2865
.brk.2865:
    { [] := undefined }
    // brk 169
    { [buf] := control::createBuffer([off]) }
    ;
    // brk 170
    { [off] := 0 }
    ;
    // brk 171
    { [n] := undefined }
    ;
    ;
    { [] := [ARG nums] }
    { [] := 0 }
    ;
    // brk 172
.fortop.2881:
    if (! numops::lt_bool([], Array_::length([]))) goto .brk.2881
    { [n] := Array_::getAt([], []) }
    // brk 173
    // brk 174
    { [off] := numops::adds([off], msgpack.packNumberCore([buf], [off], [n])) }
    ;
.cont.2881:
    { [] := numops::adds([], 1) }
    goto .fortop.2881
.brk.2881:
    { [] := undefined }
    // brk 175
    { JMPVALUE := [buf] } goto .ret.593
.ret.593:
    ;
    goto .final_0_58
.final_0_58:



PROC msgpack.packNumberCore
    // brk 127
    { [tag] := 203 }
    ;
    // brk 128
    if (! numops::toBool(SHARED_DEF(#34 u(3): numops::eq([ARG num], numops::lsls([ARG num], 0))))) goto .lazySkip_2_59
    { JMPVALUE := SHARED_REF(#34) } goto .lazy_1_59
.lazySkip_2_59:
    langsupp::ignore(SHARED_REF(#34))
    { JMPVALUE := numops::eq([ARG num], numops::lsrs([ARG num], 0)) } goto .lazy_1_59
.lazy_1_59:
    SHARED_DEF(#35 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#35))) goto .else_0_59
    // brk 129
    if (numops::toBool(SHARED_DEF(#36 u(3): numops::le(-31, [ARG num])))) goto .lazySkip_5_59
    { JMPVALUE := SHARED_REF(#36) } goto .lazy_4_59
.lazySkip_5_59:
    langsupp::ignore(SHARED_REF(#36))
    { JMPVALUE := numops::le([ARG num], 127) } goto .lazy_4_59
.lazy_4_59:
    SHARED_DEF(#37 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#37))) goto .else_3_59
    // brk 130
    if (! numops::toBoolDecr([ARG buf])) goto .else_6_59
    // brk 131
    BufferMethods::setByte([ARG buf], [ARG offset], [ARG num])
    ;
    goto .afterif_7_59
.else_6_59:
.afterif_7_59:
    // brk 132
    { JMPVALUE := 1 } goto .ret.591
    goto .afterif_8_59
.else_3_59:
    // brk 133
    if (! numops::toBoolDecr(numops::le(0, [ARG num]))) goto .else_9_59
    // brk 134
    if (! numops::toBoolDecr(numops::le([ARG num], 255))) goto .else_10_59
    // brk 135
    { [tag] := 204 }
    ;
    goto .afterif_11_59
.else_10_59:
    // brk 136
    if (! numops::toBoolDecr(numops::le([ARG num], 65535))) goto .else_12_59
    // brk 137
    { [tag] := 205 }
    ;
    goto .afterif_13_59
.else_12_59:
    // brk 138
    { [tag] := 206 }
    ;
.afterif_13_59:
.afterif_11_59:
    goto .afterif_14_59
.else_9_59:
    // brk 139
    if (! numops::toBoolDecr(numops::le(-127, [ARG num]))) goto .else_15_59
    // brk 140
    { [tag] := 208 }
    ;
    goto .afterif_16_59
.else_15_59:
    // brk 141
    if (! numops::toBoolDecr(numops::le(-32767, [ARG num]))) goto .else_17_59
    // brk 142
    { [tag] := 209 }
    ;
    goto .afterif_18_59
.else_17_59:
    // brk 143
    { [tag] := 210 }
    ;
.afterif_18_59:
.afterif_16_59:
.afterif_14_59:
.afterif_8_59:
    goto .afterif_19_59
.else_0_59:
.afterif_19_59:
    // brk 144
    { [fmt] := msgpack.tagFormat([tag]) }
    ;
    // brk 145
    if (! numops::toBoolDecr([ARG buf])) goto .else_20_59
    // brk 146
    BufferMethods::setByte([ARG buf], [ARG offset], [tag])
    ;
    // brk 147
    BufferMethods::setNumber([ARG buf], [fmt], numops::adds([ARG offset], 1), [ARG num])
    ;
    goto .afterif_21_59
.else_20_59:
.afterif_21_59:
    // brk 148
    { JMPVALUE := numops::adds(pins.sizeOf([fmt]), 1) } goto .ret.591
.ret.591:
    ;
    goto .final_22_59
.final_22_59:



PROC pins.sizeOf
    // brk 117
    { JMPVALUE := Buffer.sizeOfNumberFormat([ARG format]) } goto .ret.583
.ret.583:
    ;
    goto .final_0_60
.final_0_60:



PROC Buffer.sizeOfNumberFormat
    // brk 176
    if (pxt::switch_eq(1, SHARED_DEF(#38 u(17): [ARG format]))) goto .switch_0_61
    if (pxt::switch_eq(2, SHARED_REF(#38))) goto .switch_1_61
    if (pxt::switch_eq(6, SHARED_REF(#38))) goto .switch_2_61
    if (pxt::switch_eq(7, SHARED_REF(#38))) goto .switch_3_61
    if (pxt::switch_eq(3, SHARED_REF(#38))) goto .switch_4_61
    if (pxt::switch_eq(4, SHARED_REF(#38))) goto .switch_5_61
    if (pxt::switch_eq(8, SHARED_REF(#38))) goto .switch_6_61
    if (pxt::switch_eq(9, SHARED_REF(#38))) goto .switch_7_61
    if (pxt::switch_eq(5, SHARED_REF(#38))) goto .switch_8_61
    if (pxt::switch_eq(10, SHARED_REF(#38))) goto .switch_9_61
    if (pxt::switch_eq(12, SHARED_REF(#38))) goto .switch_10_61
    if (pxt::switch_eq(11, SHARED_REF(#38))) goto .switch_11_61
    if (pxt::switch_eq(15, SHARED_REF(#38))) goto .switch_12_61
    if (pxt::switch_eq(13, SHARED_REF(#38))) goto .switch_13_61
    if (pxt::switch_eq(16, SHARED_REF(#38))) goto .switch_14_61
    if (pxt::switch_eq(14, SHARED_REF(#38))) goto .switch_15_61
    { JMPVALUE := SHARED_REF(#38) } goto .brk.2963
.switch_0_61:
.switch_1_61:
.switch_2_61:
.switch_3_61:
    // brk 177
    { JMPVALUE := 1 } goto .ret.619
.switch_4_61:
.switch_5_61:
.switch_6_61:
.switch_7_61:
    // brk 178
    { JMPVALUE := 2 } goto .ret.619
.switch_8_61:
.switch_9_61:
.switch_10_61:
.switch_11_61:
.switch_12_61:
.switch_13_61:
    // brk 179
    { JMPVALUE := 4 } goto .ret.619
.switch_14_61:
.switch_15_61:
    // brk 180
    { JMPVALUE := 8 } goto .ret.619
.brk.2963:
    // brk 181
    { JMPVALUE := 0 } goto .ret.619
.ret.619:
    ;
    goto .final_16_61
.final_16_61:



PROC msgpack.tagFormat
    // brk 118
    if (pxt::switch_eq(203, SHARED_DEF(#39 u(8): [ARG tag]))) goto .switch_0_62
    if (pxt::switch_eq(204, SHARED_REF(#39))) goto .switch_1_62
    if (pxt::switch_eq(205, SHARED_REF(#39))) goto .switch_2_62
    if (pxt::switch_eq(206, SHARED_REF(#39))) goto .switch_3_62
    if (pxt::switch_eq(208, SHARED_REF(#39))) goto .switch_4_62
    if (pxt::switch_eq(209, SHARED_REF(#39))) goto .switch_5_62
    if (pxt::switch_eq(210, SHARED_REF(#39))) goto .switch_6_62
    { JMPVALUE := SHARED_REF(#39) } goto .switch_7_62
.switch_0_62:
    // brk 119
    { JMPVALUE := 16 } goto .ret.590
.switch_1_62:
    // brk 120
    { JMPVALUE := 7 } goto .ret.590
.switch_2_62:
    // brk 121
    { JMPVALUE := 9 } goto .ret.590
.switch_3_62:
    // brk 122
    { JMPVALUE := 12 } goto .ret.590
.switch_4_62:
    // brk 123
    { JMPVALUE := 6 } goto .ret.590
.switch_5_62:
    // brk 124
    { JMPVALUE := 8 } goto .ret.590
.switch_6_62:
    // brk 125
    { JMPVALUE := 10 } goto .ret.590
.switch_7_62:
    // brk 126
    { JMPVALUE := null } goto .ret.590
.brk.2997:
    { JMPVALUE := undefined } goto .ret.590
.ret.590:
    ;
    goto .final_8_62
.final_8_62:



PROC settings.runNumber
    // brk 270
    if (! numops::toBool(SHARED_DEF(#40 u(3): settings.readNumber([RUN_KEY])))) goto .lazySkip_1_63
    { JMPVALUE := SHARED_REF(#40) } goto .lazy_0_63
.lazySkip_1_63:
    langsupp::ignore(SHARED_REF(#40))
    { JMPVALUE := 0 } goto .lazy_0_63
.lazy_0_63:
    SHARED_DEF(#41 u(2): JMPVALUE)
    { JMPVALUE := SHARED_REF(#41) } goto .ret.895
.ret.895:
    ;
    goto .final_2_63
.final_2_63:



PROC settings.readNumber
    // brk 293
    { [buf] := settings.readBuffer([ARG key]) }
    ;
    // brk 294
    if (! numops::toBoolDecr(Boolean_::bang(numops::toBoolDecr([buf])))) goto .else_0_64
    // brk 295
    { JMPVALUE := undefined } goto .ret.908
    goto .afterif_1_64
.else_0_64:
    // brk 296
    { [nums] := msgpack.unpackNumberArray([buf], 0) }
    ;
    // brk 297
    if (numops::toBool(SHARED_DEF(#42 u(3): [nums]))) goto .lazySkip_4_64
    { JMPVALUE := SHARED_REF(#42) } goto .lazy_3_64
.lazySkip_4_64:
    langsupp::ignore(SHARED_REF(#42))
    { JMPVALUE := numops::ge(Array_::length([nums]), 1) } goto .lazy_3_64
.lazy_3_64:
    SHARED_DEF(#43 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#43))) goto .else_2_64
    // brk 298
    { JMPVALUE := Array_::getAt([nums], 0) } goto .ret.908
    goto .afterif_5_64
.else_2_64:
.afterif_5_64:
    // brk 299
    { JMPVALUE := undefined } goto .ret.908
.afterif_1_64:
    { JMPVALUE := undefined } goto .ret.908
.ret.908:
    ;
    goto .final_6_64
.final_6_64:



PROC msgpack.unpackNumberArray
    // brk 149
    { [res] := Array_::mk() }
    ;
    // brk 150
.cont.3034:
    // brk 151
    if (! numops::toBoolDecr(numops::lt([ARG offset], BufferMethods::length([ARG buf])))) goto .brk.3034
    // brk 152
    { [ARG offset] := numops::adds(SHARED_DEF(#44 u(2): [ARG offset]), 1) }
    { [fmt] := msgpack.tagFormat(BufferMethods::getByte([ARG buf], SHARED_REF(#44))) }
    ;
    // brk 153
    if (! numops::toBoolDecr(numops::eqq([fmt], null))) goto .else_0_65
    // brk 154
    { [v] := BufferMethods::getNumber([ARG buf], 6, numops::subs([ARG offset], 1)) }
    ;
    // brk 155
    if (numops::toBool(SHARED_DEF(#45 u(3): numops::le(-31, [v])))) goto .lazySkip_3_65
    { JMPVALUE := SHARED_REF(#45) } goto .lazy_2_65
.lazySkip_3_65:
    langsupp::ignore(SHARED_REF(#45))
    { JMPVALUE := numops::le([v], 127) } goto .lazy_2_65
.lazy_2_65:
    SHARED_DEF(#46 u(2): JMPVALUE)
    if (! numops::toBoolDecr(SHARED_REF(#46))) goto .else_1_65
    // brk 156
    Array_::push([res], [v])
    ;
    goto .afterif_4_65
.else_1_65:
    // brk 157
    { JMPVALUE := null } goto .ret.592
.afterif_4_65:
    goto .afterif_5_65
.else_0_65:
    // brk 158
    Array_::push([res], BufferMethods::getNumber([ARG buf], [fmt], [ARG offset]))
    ;
    // brk 159
    { [ARG offset] := numops::adds([ARG offset], pins.sizeOf([fmt])) }
    ;
.afterif_5_65:
    // brk 160
.cont.3081:
    // brk 161
    if (! numops::toBoolDecr(numops::eqq(BufferMethods::getByte([ARG buf], [ARG offset]), 193))) goto .brk.3081
    // brk 162
    { [ARG offset] := numops::adds([ARG offset], 1) }
    ;
    goto .cont.3081
.brk.3081:
    goto .cont.3034
.brk.3034:
    // brk 163
    { JMPVALUE := [res] } goto .ret.592
.ret.592:
    ;
    goto .final_6_65
.final_6_65:


  + ./built/debug/binary.js 236.99kb
package written to built/debug/binary.js
  + ./built/debug/debugInfo.json 71.24kb
